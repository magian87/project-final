


create table if not exists activity (
                          id bigint generated by default as identity,
                          comment varchar(4096),
                          description varchar(4096),
                          estimate integer,
                          priority_code varchar(255),
                          status_code varchar(255),
                          title varchar(1024) not null,
                          type_code varchar(255),
                          updated timestamp(6),
                          author_id bigint not null,
                          task_id bigint not null,
                          primary key (id)
);

create table if not exists attachment (
                            id bigint generated by default as identity,
                            name varchar(128) not null,
                            date_time timestamp default now(),
                            file_link varchar(255) not null,
                            object_id bigint not null,
                            object_type smallint not null,
                            user_id bigint not null,
                            primary key (id)
);

create table if not exists contact (code varchar(255) not null, id bigint not null, value_ varchar(256) not null, primary key (code, id));


create table if not exists mail_case (
                           id bigint generated by default as identity,
                           date_time timestamp(6) not null,
                           email varchar(255) not null,
                           name varchar(255) not null,
                           result varchar(255) not null,
                           template varchar(255) not null,
                           primary key (id)
);

create table if not exists profile (
                         id bigint not null,
                         last_failed_login timestamp(6),
                         last_login timestamp(6),
                         mail_notifications bigint,
                         primary key (id)
);

create table if not exists project (
                         id bigint generated by default as identity,
                         endpoint timestamp(6),
                         startpoint timestamp(6),
                         title varchar(1024) not null,
                         code varchar(32) not null,
                         description varchar(4096) not null,
                         type_code varchar(32) not null,
                         parent_id bigint,
                         primary key (id)
);

create table if not exists reference (
                           id bigint generated by default as identity,
                           endpoint timestamp(6),
                           startpoint timestamp(6),
                           title varchar(1024) not null,
                           aux varchar,
                           code varchar(32) not null,
                           ref_type smallint not null,
                           primary key (id)
);

create table if not exists sprint (
                        id bigint generated by default as identity,
                        endpoint timestamp(6),
                        startpoint timestamp(6) not null,
                        title varchar(1024) not null,
                        status_code varchar(32) not null,
                        project_id bigint not null,
                        primary key (id)
);

create table if not exists task (
                      id bigint generated by default as identity,
                      endpoint timestamp(6),
                      startpoint timestamp(6),
                      title varchar(1024) not null,
                      description varchar(4096) not null,
                      estimate integer,
                      priority_code varchar(32) not null,
                      status_code varchar(32) not null,
                      type_code varchar(32) not null,
                      updated timestamp(6),
                      parent_id bigint,
                      project_id bigint not null,
                      sprint_id bigint,
                      primary key (id)
);

create table if not exists task_tag (
                          task_id bigint not null,
                          tag varchar(255)
);

create table if not exists user_belong (
                             id bigint generated by default as identity,
                             endpoint timestamp(6),
                             startpoint timestamp(6) not null,
                             object_id bigint not null,
                             object_type smallint not null,
                             user_id bigint not null,
                             user_type_code varchar(32) not null,
                             primary key (id)
);

create table if not exists user_role (
                           user_id bigint not null,
                           role smallint
);

create table if not exists users (
                       id bigint generated by default as identity,
                       endpoint timestamp(6),
                       startpoint timestamp(6),
                       display_name varchar(32) not null,
                       email varchar(128) not null,
                       first_name varchar(32) not null,
                       last_name varchar(32),
                       password varchar(255),
                       primary key (id)
);
--alter table if not exists project
--add constraint if not exists UK_eh3nusutt0qy84a4yr9pfxkyg unique (code);

alter table project
add constraint if not exists UK_eh3nusutt0qy84a4yr9pfxkyg unique (code);


alter table reference
    add constraint if not exists uk_reference_ref_type_code unique (ref_type, code);


alter table task_tag
    add constraint if not exists uk_task_tag unique (task_id, tag);


alter table user_belong
    add constraint if not exists uk_user_belong unique (object_id, object_type, user_id, user_type_code);


alter table user_role
    add constraint if not exists uk_user_role unique (user_id, role);


alter table users
    add constraint if not exists UK_4aub6vqmnun7rt481gp123xph unique (display_name);


alter table users
    add constraint if not exists UK_6dotkott2kjsp8vw4d0m25fb7 unique (email);


alter table activity
    add constraint if not exists FKenkqf7j2ybbur2vngd3u1l8ao
    foreign key (author_id)
    references users;


alter table activity
    add constraint if not exists FK9e9rpcsl93xurbnkmshgega2c
    foreign key (task_id)
    references task;


alter table contact
    add constraint if not exists FKorps6ifsim0u6ymkqxwua1817
    foreign key (id)
    references profile;


alter table  project
    add constraint if not exists FKt0just6g3205u402vn88i0fhy
    foreign key (parent_id)
    references project
    on delete cascade;


alter table  sprint
    add constraint if not exists FKerwve0blrvfhqm1coxo69f0xr
    foreign key (project_id)
    references project
    on delete cascade;


alter table task
    add constraint if not exists FK82ogu5quub0bhyuhp25riy7pf
    foreign key (parent_id)
    references task
    on delete cascade;


alter table  task
    add constraint if not exists FKk8qrwowg31kx7hp93sru1pdqa
    foreign key (project_id)
    references project;


alter table task
    add constraint if not exists FKao8fqiovc2g9en1pq7jaengh6
    foreign key (sprint_id)
    references sprint;


alter table task_tag
    add constraint if not exists FKmnb6mkxwtvkg1utqig0ps56ne
    foreign key (task_id)
    references task
    on delete cascade;


alter table user_role
    add constraint if not exists FKj345gk1bovqvfame88rcx7yyx
    foreign key (user_id)
    references users
    on delete cascade	;




/*
DELETE FROM profile;
DELETE FROM user_role;
DELETE FROM user_belong;
DELETE FROM users;
DELETE FROM task;
DELETE FROM sprint;
DELETE FROM project;
ALTER SEQUENCE users_id_seq RESTART WITH 1;
*/

insert into users (EMAIL, PASSWORD, FIRST_NAME, LAST_NAME, DISPLAY_NAME)
values ('user@gmail.com', '{noop}password', 'userFirstName', 'userLastName', 'userDisplayName'),
       ('admin@gmail.com', '{noop}admin', 'adminFirstName', 'adminLastName', 'adminDisplayName'),
       ('guest@gmail.com', '{noop}guest', 'guestFirstName', 'guestLastName', 'guestDisplayName');

-- 0 DEV
-- 1 ADMIN
insert into USER_ROLE (ROLE, USER_ID)
values (0, 1),
       (1, 2),
       (0, 2);

--DELETE FROM reference;
--ALTER SEQUENCE reference_id_seq RESTART WITH 1;
--============ References =================

insert into reference (CODE, TITLE, REF_TYPE)
-- TASK
values ('task', 'Task', 2),
       ('story', 'Story', 2),
       ('bug', 'Bug', 2),
       ('epic', 'Epic', 2),
-- TASK_STATUS
       ('icebox', 'Icebox', 3),
       ('backlog', 'Backlog', 3),
       ('ready', 'Ready', 3),
       ('in progress', 'In progress', 3),
       ('done', 'Done', 3),
-- SPRINT_STATUS
       ('planning', 'Planning', 4),
       ('implementation', 'Implementation', 4),
       ('review', 'Review', 4),
       ('retrospective', 'Retrospective', 4),
-- USER_TYPE
       ('admin', 'Admin', 5),
       ('user', 'User', 5),
-- PROJECT
       ('scrum', 'Scrum', 1),
       ('task tracker', 'Task tracker', 1),
-- CONTACT
       ('skype', 'Skype', 0),
       ('tg', 'Telegram', 0),
       ('mobile', 'Mobile', 0),
       ('phone', 'Phone', 0),
       ('website', 'Website', 0),
       ('vk', 'VK', 0),
       ('linkedin', 'LinkedIn', 0),
       ('github', 'GitHub', 0),
-- PRIORITY
       ('critical', 'Critical', 7),
       ('high', 'High', 7),
       ('normal', 'Normal', 7),
       ('low', 'Low', 7),
       ('neutral', 'Neutral', 7);

insert into reference (CODE, TITLE, REF_TYPE, AUX)
-- MAIL_NOTIFICATION
values ('assigned', 'Assigned', 6, '1'),
       ('three_days_before_deadline', 'Three days before deadline', 6, '2'),
       ('two_days_before_deadline', 'Two days before deadline', 6, '4'),
       ('one_day_before_deadline', 'One day before deadline', 6, '8'),
       ('deadline', 'Deadline', 6, '16'),
       ('overdue', 'Overdue', 6, '32');

insert into profile (ID, LAST_FAILED_LOGIN, LAST_LOGIN, MAIL_NOTIFICATIONS)
values (1, null, null, 49),
       (2, null, null, 14);

values (1, 'skype', 'userSkype'),
       (1, 'mobile', '+01234567890'),
       (1, 'website', 'user.com'),
       (2, 'github', 'adminGitHub'),
       (2, 'tg', 'adminTg'),
       (2, 'vk', 'adminVk');

INSERT INTO project (id, code, title, description, type_code, startpoint, endpoint, parent_id) VALUES (2, 'task tracker', 'PROJECT-1', 'test project', 'task tracker', null, null, null);

INSERT INTO sprint (id, status_code, startpoint, endpoint, title, project_id) VALUES (1, 'planning', '2023-04-09 23:05:05.000000', '2023-04-12 23:05:12.000000', 'Sprint-1', 2);

INSERT INTO task (id, title, description, type_code, status_code, priority_code, estimate, updated, project_id, sprint_id, parent_id, startpoint, endpoint) VALUES (2, 'Task-1', 'short test task', 'task', 'in progress', 'high', null, null, 2, 1, null, null, null);
INSERT INTO task (id, title, description, type_code, status_code, priority_code, estimate, updated, project_id, sprint_id, parent_id, startpoint, endpoint) VALUES (3, 'Task-2', 'test 2 task', 'bug', 'ready', 'normal', null, null, 2, 1, null, null, null);
INSERT INTO task (id, title, description, type_code, status_code, priority_code, estimate, updated, project_id, sprint_id, parent_id, startpoint, endpoint) VALUES (5, 'Task-4', 'test 4', 'bug', 'in progress', 'normal', null, null, 2, 1, null, null, null);
INSERT INTO task (id, title, description, type_code, status_code, priority_code, estimate, updated, project_id, sprint_id, parent_id, startpoint, endpoint) VALUES (4, 'Task-3', 'test 3 descr', 'task', 'done', 'low', null, null, 2, 1, null, null, null);
